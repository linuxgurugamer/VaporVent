// Apu by Masset Stephane
// Compiled with PartTool 1.12
PART
{
	// --- general parameters ---
	name = ApuUnit
	module = Part
	author = stephane masset
	mesh = apu.mu

	// --- asset parameters ---
	scale = 1
	rescaleFactor = 0.15

	// --- node definitions ---

    //node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1
    //node_stack_bottom = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1

    // --- test nodes helper value ---
    node_stack_bottom = 0.0, 0.0, 0.0, 0.0, 0.0, 0.15, 1, 1
	node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -0.15, 1, 1

    // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

    // --- Tech tree ---
	TechRequired = advElectrics

	// --- editor parameters ---
	entryCost = 2000
	cost = 100
	category = Electrical
	subcategory = 0
	title = #apu1
	manufacturer = #apu2
	description = #apu3
	tags = #apu4

	// --- standard part parameters ---
	mass = 0.02
	dragModelType = default
	maximum_drag = 0.1
	minimum_drag = 0.1
	angularDrag = 0.2
	breakingForce = 50
    breakingTorque = 50
	crashTolerance = 7
	PhysicsSignificance = 1
	maxTemp = 2500
	heatConductivity = 0.02 
	skinInternalConductionMult = 2.0
	emissiveConstant = 0.1 
	bulkheadProfiles = size0

	// module unit
	MODULE
	{
		name = makeSteam
		alwaysOn = false
	}

	// Now APU require is own resource i'm using SolidFuel to keep
	// resource internal only for APU.
	// 

	RESOURCE
	{
		name = SolidFuel
		amount = 100
		maxAmount = 400
	}

	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = false
		requireAllinputs = true
		//resourceThreshold = 150
		
		INPUT_RESOURCE
		{
			name = SolidFuel
			rate = 0.35
		}

		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 0.8
		}
	}

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 100					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.01			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.01			//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0		//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 0			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0			//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 10000			//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 0						//Maximum amount of radiator capacity we can consume - 2500 = 1 small
		PassiveEnergy
		{
			key = 0 	25000
			key = 200 	10000
			key = 250 	50		
			key = 300	25
			key = 350	0
		}
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = OXYGEN
			value = True
		}
	}

	MODULE
	{
		name = ModuleCargoPart
		packedVolume = 8
		stackableQuantity = 3
	}	
}
